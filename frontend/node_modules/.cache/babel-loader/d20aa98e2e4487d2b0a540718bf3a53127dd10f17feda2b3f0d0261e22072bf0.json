{"ast":null,"code":"var _jsxFileName = \"/Users/jivitrana/preventive-health-app/frontend/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Set default user and authentication state for direct access\n  const [user, setUser] = useState({\n    _id: '1',\n    name: 'Demo User',\n    email: 'demo@example.com',\n    healthScore: 72,\n    createdAt: new Date()\n  });\n  const [token, setToken] = useState('mock-jwt-token');\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Skip loadUser effect since we're setting default user\n    setLoading(false);\n  }, []);\n\n  // Set auth token for all requests\n  const setAuthToken = token => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null); // Clear any previous errors\n\n      console.log('Registering with data:', userData);\n\n      // Add baseURL explicitly to make sure we're hitting the right endpoint\n      const apiUrl = 'http://localhost:5001/api/auth/register';\n      console.log('Making registration request to:', apiUrl);\n      const res = await axios.post(apiUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Registration response:', res.data);\n      if (res.data && res.data.token) {\n        setToken(res.data.token);\n\n        // Set user data if received from the server\n        if (res.data.user) {\n          setUser(res.data.user);\n          setIsAuthenticated(true);\n          console.log('User authenticated:', res.data.user);\n        } else {\n          console.warn('No user data in registration response');\n        }\n        return true;\n      } else {\n        console.error('No token in registration response');\n        setError('Registration failed: Invalid server response');\n        return false;\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Registration error:', err);\n      if (err.response) {\n        console.error('Error status:', err.response.status);\n        console.error('Error data:', err.response.data);\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n      } else {\n        console.error('Error message:', err.message);\n      }\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed: ' + err.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async userData => {\n    try {\n      setLoading(true);\n      setError(null); // Clear any previous errors\n\n      console.log('Logging in with data:', {\n        ...userData,\n        password: '****'\n      });\n\n      // Add baseURL explicitly to make sure we're hitting the right endpoint\n      const apiUrl = 'http://localhost:5001/api/auth/login';\n      console.log('Making login request to:', apiUrl);\n      const res = await axios.post(apiUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Login response:', res.data);\n      if (res.data && res.data.token) {\n        setToken(res.data.token);\n        if (res.data.user) {\n          setUser(res.data.user);\n          setIsAuthenticated(true);\n        } else {\n          console.warn('No user data in login response');\n        }\n        return true;\n      } else {\n        console.error('No token in login response');\n        setError('Login failed: Invalid server response');\n        return false;\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Login error:', err);\n      if (err.response) {\n        console.error('Error status:', err.response.status);\n        console.error('Error data:', err.response.data);\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n      } else {\n        console.error('Error message:', err.message);\n      }\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed: ' + err.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    setAuthToken(null);\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"GgW8PqSoXzgi5D/qNR87tAQdx1g=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","_id","name","email","healthScore","createdAt","Date","token","setToken","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","setAuthToken","defaults","headers","common","localStorage","setItem","removeItem","register","userData","console","log","apiUrl","res","post","data","warn","err","_err$response","_err$response$data","response","status","request","message","login","password","_err$response2","_err$response2$data","logout","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jivitrana/preventive-health-app/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  // Set default user and authentication state for direct access\n  const [user, setUser] = useState({\n    _id: '1',\n    name: 'Demo User',\n    email: 'demo@example.com',\n    healthScore: 72,\n    createdAt: new Date()\n  });\n  const [token, setToken] = useState('mock-jwt-token');\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Skip loadUser effect since we're setting default user\n    setLoading(false);\n  }, []);\n\n  // Set auth token for all requests\n  const setAuthToken = (token) => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  };\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null); // Clear any previous errors\n      \n      console.log('Registering with data:', userData);\n      \n      // Add baseURL explicitly to make sure we're hitting the right endpoint\n      const apiUrl = 'http://localhost:5001/api/auth/register';\n      console.log('Making registration request to:', apiUrl);\n      \n      const res = await axios.post(apiUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Registration response:', res.data);\n      \n      if (res.data && res.data.token) {\n        setToken(res.data.token);\n        \n        // Set user data if received from the server\n        if (res.data.user) {\n          setUser(res.data.user);\n          setIsAuthenticated(true);\n          console.log('User authenticated:', res.data.user);\n        } else {\n          console.warn('No user data in registration response');\n        }\n        \n        return true;\n      } else {\n        console.error('No token in registration response');\n        setError('Registration failed: Invalid server response');\n        return false;\n      }\n    } catch (err) {\n      console.error('Registration error:', err);\n      if (err.response) {\n        console.error('Error status:', err.response.status);\n        console.error('Error data:', err.response.data);\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n      } else {\n        console.error('Error message:', err.message);\n      }\n      setError(err.response?.data?.message || 'Registration failed: ' + err.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null); // Clear any previous errors\n      \n      console.log('Logging in with data:', { ...userData, password: '****' });\n      \n      // Add baseURL explicitly to make sure we're hitting the right endpoint\n      const apiUrl = 'http://localhost:5001/api/auth/login';\n      console.log('Making login request to:', apiUrl);\n      \n      const res = await axios.post(apiUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Login response:', res.data);\n      \n      if (res.data && res.data.token) {\n        setToken(res.data.token);\n        \n        if (res.data.user) {\n          setUser(res.data.user);\n          setIsAuthenticated(true);\n        } else {\n          console.warn('No user data in login response');\n        }\n        \n        return true;\n      } else {\n        console.error('No token in login response');\n        setError('Login failed: Invalid server response');\n        return false;\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      if (err.response) {\n        console.error('Error status:', err.response.status);\n        console.error('Error data:', err.response.data);\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n      } else {\n        console.error('Error message:', err.message);\n      }\n      setError(err.response?.data?.message || 'Login failed: ' + err.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    setAuthToken(null);\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        isAuthenticated,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        clearError\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}